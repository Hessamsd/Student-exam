// <auto-generated />
using System;
using Infrastructur;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructur.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241201200857_InitData")]
    partial class InitData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domin.Models.Answer", b =>
                {
                    b.Property<int>("AnswerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnswerId"));

                    b.Property<DateTime>("AnswerDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AnswerText")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("AnswerId");

                    b.HasIndex("QuestionId");

                    b.HasIndex("StudentId");

                    b.ToTable("Answers", (string)null);

                    b.HasData(
                        new
                        {
                            AnswerId = 1,
                            AnswerDate = new DateTime(2024, 12, 1, 23, 38, 56, 895, DateTimeKind.Local).AddTicks(63),
                            AnswerText = "پاسخ 1",
                            QuestionId = 1,
                            StudentId = 1
                        },
                        new
                        {
                            AnswerId = 2,
                            AnswerDate = new DateTime(2024, 12, 1, 23, 38, 56, 895, DateTimeKind.Local).AddTicks(8756),
                            AnswerText = "پاسخ 2",
                            QuestionId = 2,
                            StudentId = 1
                        },
                        new
                        {
                            AnswerId = 3,
                            AnswerDate = new DateTime(2024, 12, 1, 23, 38, 56, 895, DateTimeKind.Local).AddTicks(8765),
                            AnswerText = "پاسخ 3",
                            QuestionId = 3,
                            StudentId = 2
                        },
                        new
                        {
                            AnswerId = 4,
                            AnswerDate = new DateTime(2024, 12, 1, 23, 38, 56, 895, DateTimeKind.Local).AddTicks(8766),
                            AnswerText = "پاسخ 4",
                            QuestionId = 4,
                            StudentId = 2
                        },
                        new
                        {
                            AnswerId = 5,
                            AnswerDate = new DateTime(2024, 12, 1, 23, 38, 56, 895, DateTimeKind.Local).AddTicks(8767),
                            AnswerText = "پاسخ 5",
                            QuestionId = 5,
                            StudentId = 3
                        });
                });

            modelBuilder.Entity("Domin.Models.Exam", b =>
                {
                    b.Property<int>("ExamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamId"));

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.Property<string>("ExamName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ExamId");

                    b.HasIndex("GroupId");

                    b.ToTable("Exams", (string)null);

                    b.HasData(
                        new
                        {
                            ExamId = 1,
                            Duration = new TimeSpan(0, 1, 0, 0, 0),
                            ExamName = "امتحان ریاضی",
                            GroupId = 1,
                            StartDate = new DateTime(2024, 12, 1, 23, 38, 56, 901, DateTimeKind.Local).AddTicks(6374)
                        },
                        new
                        {
                            ExamId = 2,
                            Duration = new TimeSpan(0, 1, 0, 0, 0),
                            ExamName = "امتحان جغرافیا",
                            GroupId = 2,
                            StartDate = new DateTime(2024, 12, 2, 23, 38, 56, 901, DateTimeKind.Local).AddTicks(7223)
                        },
                        new
                        {
                            ExamId = 3,
                            Duration = new TimeSpan(0, 1, 0, 0, 0),
                            ExamName = "امتحان تاریخ",
                            GroupId = 3,
                            StartDate = new DateTime(2024, 12, 3, 23, 38, 56, 901, DateTimeKind.Local).AddTicks(7333)
                        },
                        new
                        {
                            ExamId = 4,
                            Duration = new TimeSpan(0, 1, 0, 0, 0),
                            ExamName = "امتحان شیمی",
                            GroupId = 1,
                            StartDate = new DateTime(2024, 12, 4, 23, 38, 56, 901, DateTimeKind.Local).AddTicks(7336)
                        },
                        new
                        {
                            ExamId = 5,
                            Duration = new TimeSpan(0, 1, 0, 0, 0),
                            ExamName = "امتحان مبانی علوم",
                            GroupId = 2,
                            StartDate = new DateTime(2024, 12, 5, 23, 38, 56, 901, DateTimeKind.Local).AddTicks(7338)
                        });
                });

            modelBuilder.Entity("Domin.Models.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupId"));

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("GroupId");

                    b.ToTable("Groups", (string)null);

                    b.HasData(
                        new
                        {
                            GroupId = 1,
                            GroupName = "گروه A"
                        },
                        new
                        {
                            GroupId = 2,
                            GroupName = "گروه B"
                        },
                        new
                        {
                            GroupId = 3,
                            GroupName = "گروه C"
                        });
                });

            modelBuilder.Entity("Domin.Models.Option", b =>
                {
                    b.Property<int>("OptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OptionId"));

                    b.Property<bool>("IsChecked")
                        .HasColumnType("bit");

                    b.Property<string>("OptionText")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("OptionId");

                    b.HasIndex("QuestionId");

                    b.ToTable("Options", (string)null);

                    b.HasData(
                        new
                        {
                            OptionId = 1,
                            IsChecked = true,
                            OptionText = "4",
                            QuestionId = 1
                        },
                        new
                        {
                            OptionId = 2,
                            IsChecked = false,
                            OptionText = "5",
                            QuestionId = 1
                        },
                        new
                        {
                            OptionId = 3,
                            IsChecked = true,
                            OptionText = "پاریس",
                            QuestionId = 2
                        },
                        new
                        {
                            OptionId = 4,
                            IsChecked = false,
                            OptionText = "لندن",
                            QuestionId = 2
                        },
                        new
                        {
                            OptionId = 5,
                            IsChecked = true,
                            OptionText = "شکسپیر",
                            QuestionId = 3
                        });
                });

            modelBuilder.Entity("Domin.Models.Question", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuestionId"));

                    b.Property<int>("ExamId")
                        .HasColumnType("int");

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("QuestionId");

                    b.HasIndex("ExamId");

                    b.ToTable("Questions", (string)null);

                    b.HasData(
                        new
                        {
                            QuestionId = 1,
                            ExamId = 1,
                            QuestionText = "۲ + ۲ برابر با چیست؟"
                        },
                        new
                        {
                            QuestionId = 2,
                            ExamId = 2,
                            QuestionText = "پایتخت فرانسه کجاست؟"
                        },
                        new
                        {
                            QuestionId = 3,
                            ExamId = 3,
                            QuestionText = "چه کسی نمایشنامه 'هملت' را نوشت؟"
                        },
                        new
                        {
                            QuestionId = 4,
                            ExamId = 4,
                            QuestionText = "نماد شیمیایی آب چیست؟"
                        },
                        new
                        {
                            QuestionId = 5,
                            ExamId = 5,
                            QuestionText = "سرعت نور چقدر است؟"
                        });
                });

            modelBuilder.Entity("Domin.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("StudentId");

                    b.HasIndex("GroupId");

                    b.ToTable("Students", (string)null);

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            GroupId = 1,
                            StudentName = "حسام"
                        },
                        new
                        {
                            StudentId = 2,
                            GroupId = 1,
                            StudentName = "هما"
                        },
                        new
                        {
                            StudentId = 3,
                            GroupId = 2,
                            StudentName = "مریم"
                        },
                        new
                        {
                            StudentId = 4,
                            GroupId = 2,
                            StudentName = "حامد"
                        },
                        new
                        {
                            StudentId = 5,
                            GroupId = 3,
                            StudentName = "حدیث"
                        });
                });

            modelBuilder.Entity("Domin.Models.Answer", b =>
                {
                    b.HasOne("Domin.Models.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domin.Models.Student", "Student")
                        .WithMany("Answers")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Domin.Models.Exam", b =>
                {
                    b.HasOne("Domin.Models.Group", "Group")
                        .WithMany("Exams")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("Domin.Models.Option", b =>
                {
                    b.HasOne("Domin.Models.Question", "Question")
                        .WithMany("Options")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("Domin.Models.Question", b =>
                {
                    b.HasOne("Domin.Models.Exam", "Exam")
                        .WithMany("Questions")
                        .HasForeignKey("ExamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exam");
                });

            modelBuilder.Entity("Domin.Models.Student", b =>
                {
                    b.HasOne("Domin.Models.Group", "Group")
                        .WithMany("Students")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("Domin.Models.Exam", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("Domin.Models.Group", b =>
                {
                    b.Navigation("Exams");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("Domin.Models.Question", b =>
                {
                    b.Navigation("Answers");

                    b.Navigation("Options");
                });

            modelBuilder.Entity("Domin.Models.Student", b =>
                {
                    b.Navigation("Answers");
                });
#pragma warning restore 612, 618
        }
    }
}
